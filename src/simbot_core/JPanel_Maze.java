package simbot_core;

import simbot_program.MyEnvironment;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Chattriya
 */
public class JPanel_Maze extends javax.swing.JPanel{

    SB_Wall[] walls;
    SB_Food[] foods;
    List<AbstractRobot> robots;
    AbstractEnvironment env;
    /**
     * Creates new form mazePanel
     */
    public JPanel_Maze(){
        env = new MyEnvironment();
        initComponents();
        setPreferredSize(new java.awt.Dimension(env.getConstMazeWidth(), env.getConstMazeHeight()));
        this.walls = env.getConstWalls();
        this.foods = env.getConstFood();
        robots = new ArrayList<AbstractRobot>();
    }
    
    public void setENV(AbstractEnvironment env) {
        this.env = env;
        setPreferredSize(new java.awt.Dimension(env.getConstMazeWidth(), env.getConstMazeHeight()));
        this.walls = env.getConstWalls();
        this.foods = env.getConstFood();
        repaint();
    }
    
    @Override
    protected void paintComponent(Graphics g)
    {
        super.paintComponent(g);
        for(SB_Wall m : walls)
        {    
            g.setColor(Color.LIGHT_GRAY);
            g.fillRect(m.x1, m.y1, (m.x2-m.x1), (m.y2-m.y1));
            g.setColor(Color.GRAY);
            g.drawRect(m.x1, m.y1, (m.x2-m.x1), (m.y2-m.y1));
            g.setColor(Color.BLACK);
            g.drawString(m.label, (m.x1+m.x2)/2, (m.y1+m.y2)/2);
        }
        
        for(AbstractRobot r : robots)
        {
            if(r.isShow) {
                Graphics2D g2 = (Graphics2D) g;
                g2.setStroke(new BasicStroke(3));
                g2.setColor(r.color);
                if(r.fillColor) {
                    g2.fillArc(r.x - env.getConstRobotRadius(), r.y - env.getConstRobotRadius(), 2*env.getConstRobotRadius(), 2 * env.getConstRobotRadius(), 0, 360);
                }
                else {
                    g2.drawArc(r.x - env.getConstRobotRadius(), r.y - env.getConstRobotRadius(), 2*env.getConstRobotRadius(), 2 * env.getConstRobotRadius(), 0, 360);
                }
                g2.setStroke(new BasicStroke(2));
                g2.setColor(Color.BLACK);
                g2.drawLine(r.x, r.y, (int) (r.x+env.getConstRobotRadius()*Math.cos(r.degree*Math.PI/180.0)), (int) (r.y+env.getConstRobotRadius()*Math.sin(r.degree*Math.PI/180.0)));
                g2.fillRect(r.x+(int)((env.getConstRobotRadius()-2)*Math.cos(r.degree*Math.PI/180))-2
                            ,r.y+(int)((env.getConstRobotRadius()-2)*Math.sin(r.degree*Math.PI/180))-2
                            ,4
                            ,4
                );
            }
        }
        
        g.setColor(Color.GREEN);
        for (SB_Food food : foods) {
            g.fillRoundRect(food.x, food.y, food.width, food.height, 5, 5);
        }
    }
    
    public void drawRobots(List<AbstractRobot> robots) {
        this.robots = robots;
        this.repaint();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setPreferredSize(new java.awt.Dimension(500, 360));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 484, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 381, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
